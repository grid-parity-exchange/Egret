name: EGRET GitHub CI

on:
    # Trigger the workflow on push or pull request,
    # but only for the main branch
    push:
        branches:
            - main
    pull_request:
        branches:
            - main
    # nightly tests at 8:00 UTC
    schedule:
        - cron:  '0 8 * * *'
    workflow_dispatch:
         types: run-test

defaults:
    run:
        shell: bash -l {0}

jobs:
    build:
        name: ${{ matrix.os }}, Python ${{ matrix.python-version }}, Pyomo ${{ matrix.pyomo-version }}
        runs-on: ${{ matrix.os }}
        strategy:
            # still want the results of other tests even if one fails
            fail-fast: false
            matrix:
                os: [ubuntu-latest]
                python-version: [3.7, 3.8, 3.9]
                pyomo-version: [6.1.2]
                include:
                    - os: macos-latest
                      python-version: 3.7
                      pyomo-version: 6.1.2
                    - os: windows-latest
                      python-version: 3.7
                      pyomo-version: 6.1.2
                    - os: ubuntu-latest
                      python-version: 3.7
                      pyomo-version: main
        steps:
          - uses: actions/checkout@v2
          - uses: conda-incubator/setup-miniconda@v2
            with:
              activate-environment: test_env
              python-version:  ${{ matrix.python-version }}
              auto-activate-base: false
          - name: Conda Env
            run: |
              conda info
              conda list
          - name: Install CBC
            run: |
              if [ ${{ matrix.os }} = windows-latest ]
              then
                # download CBC binary, copy to place already in PATH
                curl -O https://ampl.com/dl/open/cbc/cbc-win64.zip
                unzip cbc-win64.zip
                cp cbc.exe $CONDA_PREFIX
              else
                conda install -c conda-forge coincbc
              fi
              # test cbc executable
              cbc -quit
          - name: Install IPOPT
            run: |
              # download IPOPT from conda-forge
              conda install -c conda-forge ipopt
          - name: Install Nose/Parameterized/Pytest
            run: |
              pip install nose parameterized pytest coveralls
          - name: Install Cython/Numpy/Pandas
            run: |
              pip install cython numpy pandas
          - name: Install Pyomo
            run: |
              pip install git+https://github.com/Pyomo/pyomo.git@${{ matrix.pyomo-version }}
          - name: Install Coramin
            run: |
              pip install coramin
          - name: Install EGRET
            run: |
              python setup.py develop
          - name: Run EGRET Tests
            run: |
              nosetests -v --nologcapture --with-coverage --cover-package=egret egret 
